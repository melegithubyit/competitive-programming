# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

from collections import deque
class Solution:
    
    def isLeaf(self, node):
        if not node.left and not node.right:
            return True
        return False

    def hasPathSum(self, root, targetSum):
        if not root:
            return False
        queue = deque()
        queue.append((root, 0))
        while queue:
            n = len(queue)
            for _ in range(n):
                node, path = queue.popleft()
                path += node.val

                if self.isLeaf(node) and path == targetSum:
                    return True

                if node.left:
                    queue.append((node.left, path))

                if node.right:
                    queue.append((node.right, path))
                
        return False